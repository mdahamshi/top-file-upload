generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  fname        String?  @default("Unknown")
  lname        String?  @default("Unknown")
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  rootFolderId String?  @unique
  rootFolder   Folder?  @relation("UserRootFolder", fields: [rootFolderId], references: [id])

  folders Folder[]
  files   File[]
}

model Folder {
  id   String @id @default(cuid())
  name String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  rootUser User? @relation("UserRootFolder")

  parent   Folder? @relation("Subfolders", fields: [parentId], references: [id], onDelete: Cascade)
  parentId String?

  subfolders Folder[] @relation("Subfolders")

  files File[]

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  ShareLink ShareLink[]

  @@index([userId])
  @@index([parentId])
}

model File {
  id           String  @id @default(cuid())
  originalName String  @default("unknown")
  storedName   String  @default("unknown")
  size         Int
  mimeType     String
  // Local path on disk (nullable if using only cloud)
  path         String?
  // Public URL when stored in cloud
  url          String?

  folder   Folder? @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId String?

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  createdAt DateTime @default(now())

  @@index([ownerId])
  @@index([folderId])
}

model ShareLink {
  id        String   @id @default(uuid())
  folderId  String
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}
